name: Auto Tag on Version Change

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      force:
        description: 'Force create tag even if version unchanged'
        default: false
        type: boolean
  push:
    branches: [main]
    paths:
      - 'Cargo.toml'

jobs:
  auto-tag:
    name: Create Tag on Version Change
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.AUTO_TAG_TOKEN || secrets.GITHUB_TOKEN }}  # Use PAT to trigger release workflow

      - name: Auto-bump version (workflow_dispatch only)
        if: github.event_name == 'workflow_dispatch'
        id: auto_bump
        run: |
          # Use cargo metadata for robust version extraction
          CURRENT_VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].version')
          echo "original_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Parse semantic version
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          
          case "${{ github.event.inputs.version_type }}" in
            "major")
              NEW_VERSION="$((major + 1)).0.0"
              ;;
            "minor") 
              NEW_VERSION="$major.$((minor + 1)).0"
              ;;
            "patch")
              NEW_VERSION="$major.$minor.$((patch + 1))"
              ;;
          esac
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "🔄 Auto-bumping version: $CURRENT_VERSION → $NEW_VERSION (${{ github.event.inputs.version_type }})"
          
          # Update Cargo.toml
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml
          
          # Commit the version bump
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Cargo.toml
          git commit -m "chore: bump version to $NEW_VERSION (${{ github.event.inputs.version_type }})"
          git push origin main

      - name: Check if version changed
        id: version_check
        run: |
          # Get current version using cargo metadata
          CURRENT_VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].version')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "previous_version=${{ steps.auto_bump.outputs.original_version }}" >> $GITHUB_OUTPUT
            echo "🔄 Version auto-bumped: ${{ steps.auto_bump.outputs.original_version }} → $CURRENT_VERSION"
          else
            # Check if version changed compared to previous commit
            git checkout HEAD~1 -- Cargo.toml 2>/dev/null || echo "No previous Cargo.toml"
            PREVIOUS_VERSION=$(cargo metadata --format-version 1 --no-deps 2>/dev/null | jq -r '.packages[0].version' 2>/dev/null || echo "none")
            git checkout HEAD -- Cargo.toml
            
            echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
            
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "🔄 Version changed: $PREVIOUS_VERSION → $CURRENT_VERSION"
            else
              echo "version_changed=false" >> $GITHUB_OUTPUT
              echo "ℹ️ Version unchanged: $CURRENT_VERSION"
            fi
          fi

      - name: Check if tag already exists
        if: steps.version_check.outputs.version_changed == 'true'
        id: tag_check
        run: |
          TAG="v${{ steps.version_check.outputs.current_version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag $TAG already exists"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag $TAG does not exist, can create"
          fi

      - name: Create and push tag
        if: steps.version_check.outputs.version_changed == 'true' && steps.tag_check.outputs.tag_exists == 'false'
        run: |
          TAG="v${{ steps.version_check.outputs.current_version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
          echo "🏷️ Created and pushed tag: $TAG"

      - name: Summary
        run: |
          echo "## 🏷️ Auto Tag Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "- **Trigger**: 🎛️ Manual (${{ github.event.inputs.version_type }} bump)" >> $GITHUB_STEP_SUMMARY
            echo "- **Original Version**: ${{ steps.auto_bump.outputs.original_version }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Trigger**: 🤖 Automatic (Cargo.toml change)" >> $GITHUB_STEP_SUMMARY
            echo "- **Previous Version**: ${{ steps.version_check.outputs.previous_version }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Current Version**: ${{ steps.version_check.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version Changed**: ${{ steps.version_check.outputs.version_changed }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.version_check.outputs.version_changed }}" = "true" ]; then
            echo "- **Tag Created**: v${{ steps.version_check.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Release Status**: 🚀 Auto-release triggered" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Action**: ℹ️ No tag created (version unchanged)" >> $GITHUB_STEP_SUMMARY
          fi